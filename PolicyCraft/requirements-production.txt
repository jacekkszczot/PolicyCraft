# PolicyCraft - Production Dependencies
# ====================================
# Essential dependencies required to run PolicyCraft in production
# This file is a subset of requirements.txt with production-only dependencies

# ===== Web Framework & Core =====
Flask==3.0.0
Werkzeug==3.0.1
Jinja2==3.1.2
gunicorn==21.2.0  # Production WSGI server
gevent==23.7.0  # Async worker for gunicorn

# ===== Authentication & Security =====
Flask-Login==0.6.3
Flask-WTF==1.2.1
WTForms==3.1.1
email-validator==2.1.0.post1
Flask-Talisman==1.1.0  # HTTPS/security headers
Flask-Session==0.8.0

# ===== Database =====
pymongo[srv]==4.6.1
python-dotenv==1.0.0
Flask-SQLAlchemy==3.1.1
SQLAlchemy==2.0.23

# ===== Data Processing =====
pandas==2.1.3
numpy==1.26.2
python-dateutil==2.8.2
pytz==2023.3.post1

# ===== Natural Language Processing =====
spacy==3.7.2
scikit-learn==1.3.2
nltk==3.8.1
contractions==0.1.73
en-core-web-sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.7.0/en_core_web_sm-3.7.0-py3-none-any.whl

# ===== Document Processing =====
pypdf==4.0.0
python-docx==1.0.1
python-magic==0.4.27

# ===== Data Visualisation =====
plotly==5.18.0
kaleido==0.2.1

# ===== Utilities =====
python-slugify==8.0.1
requests==2.31.0
python-multipart==0.0.6

# ===== Logging & Monitoring =====
python-json-logger==2.0.7
sentry-sdk[flask]==1.34.0  # Error tracking

# ===== Caching =====
Flask-Caching==2.1.0
redis==5.0.1  # For distributed caching
sentence-transformers>=2.2.0

# ===== Document Processing =====
pypdf>=6.0.0
python-docx>=1.1.0
PyMuPDF>=1.23.0
pdfplumber>=0.11.7

# ===== OCR (Optical Character Recognition) =====
pytesseract>=0.3.13
pdf2image>=1.17.0
Pillow>=10.4.0

# ===== Export & Reporting =====
reportlab>=4.0.0
XlsxWriter>=3.2.0

# ===== Data Visualisation =====
plotly>=5.17.0
kaleido>=0.2.1

# ===== Production Server =====
gunicorn>=21.2.0

# IMPORTANT: POST-INSTALLATION STEPS
# ===================================
# After installing requirements, run these commands:
#
# 1. Download spaCy English model:
#    python -m spacy download en_core_web_sm
#
# 2. Download NLTK data:
#    python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords'); nltk.download('wordnet'); nltk.download('averaged_perceptron_tagger')"
#
# 3. Install system dependencies for OCR (macOS):
#    brew install tesseract poppler
#    # For Ubuntu/Debian: sudo apt-get install tesseract-ocr poppler-utils
#    # For Windows: Download from https://github.com/UB-Mannheim/tesseract/wiki
#
# 4. Set environment variables (required for production):
#    echo "SECRET_KEY=your-secret-key-here" >> .env
#    echo "MONGODB_URI=your-mongodb-connection-string" >> .env
#    echo "FLASK_ENV=production" >> .env
#
# 5. For production deployment:
#    export FLASK_ENV=production
#    export FLASK_DEBUG=0
#    gunicorn -w 4 -b 0.0.0.0:8000 app:app
#
# NOTE: Standard library modules (os, sys, json, re, datetime, pathlib, 
#       logging, typing, collections, hashlib, uuid, secrets, shutil, io, 
#       base64, unicodedata, platform, argparse, glob, importlib, time) 
#       are included with Python and don't need to be installed separately.
#
# NOTE: The following libraries are imported but may not be actively used
#       in production - they are kept for compatibility:
#       - tqdm (progress bars)
#       - python-slugify (URL-friendly strings)
#       - requests (HTTP requests)
#       - python-json-logger (structured logging)
#       - bson (MongoDB ObjectId - included with pymongo)
