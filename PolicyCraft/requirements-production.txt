# PolicyCraft - Production Dependencies
# ====================================
# Essential dependencies required to run PolicyCraft in production
# Updated for production deployment with all required libraries

# ===== Web Framework & Core =====
Flask==3.0.0
Werkzeug==3.0.1
Jinja2>=3.1.0

# ===== Authentication & Security =====
Flask-Login>=0.6.3
Flask-WTF>=1.2.0
WTForms>=3.1.0
email_validator>=2.2.0

# ===== Database =====
pymongo>=4.6.0
python-dotenv>=1.0.0
Flask-SQLAlchemy>=3.1.0

# ===== Data Processing =====
pandas>=2.1.0
numpy>=1.24.0

# ===== Natural Language Processing =====
spacy>=3.7.0
scikit-learn>=1.3.0
nltk>=3.8.1
contractions>=0.1.73
sentence-transformers>=2.2.0

# ===== Core ML Dependencies =====
torch>=2.0.0  # PyTorch - required by sentence-transformers and spaCy
thinc>=8.0.0  # Neural network library required by spaCy

# ===== Document Processing =====
pypdf>=6.0.0
python-docx>=1.1.0
PyMuPDF>=1.23.0
pdfplumber>=0.11.7

# ===== OCR (Optical Character Recognition) =====
pytesseract>=0.3.13
pdf2image>=1.17.0
Pillow>=10.4.0

# ===== Export & Reporting =====
reportlab>=4.0.0
XlsxWriter>=3.2.0

# ===== Data Visualisation =====
plotly>=5.17.0
kaleido>=0.2.1

# ===== Production Server =====
gunicorn>=21.2.0

# ===== Utilities =====
tqdm>=4.66.0
python-slugify>=8.0.1
typer>=0.9.0

# IMPORTANT: POST-INSTALLATION STEPS
# ===================================
# After installing requirements, run these commands:
#
# 1. Download spaCy English model:
#    python -m spacy download en_core_web_sm
#
# 2. Download NLTK data:
#    python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords'); nltk.download('wordnet'); nltk.download('averaged_perceptron_tagger')"
#
# 3. Install system dependencies for OCR (Ubuntu/Debian):
#    sudo apt-get update
#    sudo apt-get install tesseract-ocr poppler-utils
#    # For CentOS/RHEL: sudo yum install tesseract poppler-utils
#    # For macOS: brew install tesseract poppler
#
# 4. Set environment variables (required for production):
#    echo "SECRET_KEY=your-secret-key-here" >> .env
#    echo "MONGODB_URI=your-mongodb-connection-string" >> .env
#    echo "FLASK_ENV=production" >> .env
#
# 5. For production deployment:
#    export FLASK_ENV=production
#    export FLASK_DEBUG=0
#    gunicorn -w 4 -b 0.0.0.0:8000 app:app
#
# NOTE: Standard library modules (os, sys, json, re, datetime, pathlib, 
#       logging, typing, collections, hashlib, uuid, secrets, shutil, io, 
#       base64, unicodedata, platform, argparse, glob, importlib, time) 
#       are included with Python and don't need to be installed separately.
#
# NOTE: The following libraries are imported but may not be actively used
#       in production - they are kept for compatibility:
#       - tqdm (progress bars)
#       - python-slugify (URL-friendly strings)
#       - requests (HTTP requests)
#       - python-json-logger (structured logging)
#       - bson (MongoDB ObjectId - included with pymongo)
